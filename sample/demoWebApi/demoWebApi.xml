<?xml version="1.0"?>
<doc>
    <assembly>
        <name>demoWebApi</name>
    </assembly>
    <members>
        <member name="T:demoWebApi.Controllers.ApiBaseController">
            <summary>
                This is the base class for all API controllers.
            </summary>
            <remarks>
                <para>This class defines the standard route prefix ("api/[controller]") for all API controllers.</para>
            </remarks>
            <seealso cref="T:MagenicMetrics.Controllers.MetricsBaseController" />
        </member>
        <member name="M:demoWebApi.Controllers.ApiBaseController.#ctor(MagenicMetrics.IMetric,demoWebApi.Models.IHealthCheckStatus)">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Controllers.ApiBaseController" /> class.
            </summary>
            <param name="metric">The metric.</param>
            <param name="healthCheckStatus">The health check status.</param>
        </member>
        <member name="T:demoWebApi.Controllers.ValuesController">
            <summary>
                This controller manages the APIs to add, delete, and retrieve database entries.
            </summary>
            <seealso cref="T:demoWebApi.Controllers.ApiBaseController" />
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.#ctor(MagenicMetrics.IMetric,demoWebApi.Services.ApiContext,demoWebApi.Models.IHealthCheckStatus)">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Controllers.ValuesController" /> class.
            </summary>
            <param name="metric">The metric.</param>
            <param name="context">The context.</param>
            <param name="healthCheckStatus">The health check status.</param>
        </member>
        <member name="F:demoWebApi.Controllers.ValuesController._context">
            <summary>
                This is the context for the persistence store.
            </summary>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
                This logically deletes the record identified by <paramref name="id" />.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
            <remarks>DELETE api/values/5</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Get">
            <summary>
                This retrieves all undeleted records from the persistence store.
            </summary>
            <returns></returns>
            <remarks>GET api/values</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Get(System.Int32)">
            <summary>
                This retrieves the record identified by <paramref name="id" />.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The matching definition.</returns>
            <remarks>GET api/values/5</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.GetAll">
            <summary>
                This retrieves all records, including logically deleted records, in the persistence store.
            </summary>
            <returns></returns>
            <remarks>GET api/values/GetAll</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Post(demoWebApi.InputModels.DefinitionInput)">
            <summary>
                This adds a new definition to the persistence store.
            </summary>
            <param name="definition">This is the new definition.</param>
            <returns>The newly added definition.</returns>
            <remarks>POST api/values?DefinitionInput</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Put(demoWebApi.InputModels.DefinitionInput)">
            <summary>
                This updates the record identified by <paramref name="definition" />.
            </summary>
            <param name="definition">This is the definition update.</param>
            <returns>The updated definition.</returns>
            <remarks>PUT api/values?DefinitionInput</remarks>
        </member>
        <member name="M:demoWebApi.Controllers.ValuesController.Undelete(System.Int32)">
            <summary>
                This restores the record identified by <paramref name="id" />.
            </summary>
            <param name="id">This is the record to logically restore.</param>
            <returns>The restored definition.</returns>
            <remarks>PUT api/values/Undelete?id</remarks>
        </member>
        <member name="T:demoWebApi.Filters.EnsureDefinitionExistsAttribute">
            <summary>
                This attribute ensures that the record id is valid and that there is a matching <see cref="T:demoWebApi.Models.Definition" /> record.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute" />
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute" />
        </member>
        <member name="M:demoWebApi.Filters.EnsureDefinitionExistsAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Filters.EnsureDefinitionExistsAttribute" /> class.
            </summary>
        </member>
        <member name="T:demoWebApi.Filters.EnsureDefinitionExistsFilter">
            <summary>
                This filter ensures that the record id is valid and that there is a matching <see cref="T:demoWebApi.InputModels.DefinitionInput" /> record.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter" />
        </member>
        <member name="M:demoWebApi.Filters.EnsureDefinitionExistsFilter.#ctor(demoWebApi.Services.ApiContext)">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Filters.EnsureDefinitionExistsFilter" /> class.
            </summary>
            <param name="apiContext">The API context.</param>
        </member>
        <member name="M:demoWebApi.Filters.EnsureDefinitionExistsFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
                Called after the action executes, before the action result.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext" />.</param>
        </member>
        <member name="M:demoWebApi.Filters.EnsureDefinitionExistsFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
                This method is executed before the action begins executing.
            </summary>
            <param name="context">This is the context for the action.</param>
            <inheritdoc />
        </member>
        <member name="T:demoWebApi.InputModels.DefinitionInput">
            <summary>
                This is the <see cref="T:demoWebApi.Models.Definition" /> binding model for requests.
            </summary>
        </member>
        <member name="P:demoWebApi.InputModels.DefinitionInput.DefinitionId">
            <summary>
                Gets or sets the identifier.
            </summary>
            <value>This is the identifier.</value>
        </member>
        <member name="P:demoWebApi.InputModels.DefinitionInput.IsDeleted">
            <summary>
                Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value><c>true</c> if this instance is deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:demoWebApi.InputModels.DefinitionInput.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:demoWebApi.Models.Definition">
            <summary>
                This is the definition class that corresponds to the database table.
            </summary>
        </member>
        <member name="P:demoWebApi.Models.Definition.DefinitionId">
            <summary>
                Gets or sets the identity definition identifier.
            </summary>
            <value>This is the identity definition identifier.</value>
        </member>
        <member name="P:demoWebApi.Models.Definition.IsDeleted">
            <summary>
                Gets or sets a value indicating whether this instance is deleted.
            </summary>
            <value><c>true</c> if this instance is deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:demoWebApi.Models.Definition.Name">
            <summary>
                Gets or sets the name of the definition.
            </summary>
            <value>This is the name of the definition.</value>
        </member>
        <member name="T:demoWebApi.Models.HealthCheckStatus">
            <summary>
                Class for all health check status data.
            </summary>
            <seealso cref="T:demoWebApi.Models.IHealthCheckStatus" />
        </member>
        <member name="M:demoWebApi.Models.HealthCheckStatus.#ctor(System.DateTime)">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Models.HealthCheckStatus" /> class.
            </summary>
            <param name="startTime">The start time.</param>
        </member>
        <member name="P:demoWebApi.Models.HealthCheckStatus.AliveSeconds">
            <summary>
                Gets the alive seconds.
            </summary>
            <value>The alive seconds.</value>
        </member>
        <member name="P:demoWebApi.Models.HealthCheckStatus.RequestsProcessed">
            <summary>
                Gets the requests processed.
            </summary>
            <value>The requests processed.</value>
        </member>
        <member name="P:demoWebApi.Models.HealthCheckStatus.StartTime">
            <summary>
                Gets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="M:demoWebApi.Models.HealthCheckStatus.IncrementRequestsProcessed">
            <summary>
                Increments the requests processed.
            </summary>
        </member>
        <member name="M:demoWebApi.Models.HealthCheckStatus.UpdateAliveSeconds">
            <summary>
                Updates the alive seconds.
            </summary>
        </member>
        <member name="T:demoWebApi.Models.IHealthCheckStatus">
            <summary>
                Interface for all health check status data.
            </summary>
        </member>
        <member name="P:demoWebApi.Models.IHealthCheckStatus.AliveSeconds">
            <summary>
                Gets the alive seconds.
            </summary>
            <value>The alive seconds.</value>
        </member>
        <member name="P:demoWebApi.Models.IHealthCheckStatus.RequestsProcessed">
            <summary>
                Gets the requests processed.
            </summary>
            <value>The requests processed.</value>
        </member>
        <member name="P:demoWebApi.Models.IHealthCheckStatus.StartTime">
            <summary>
                Gets the start time.
            </summary>
            <value>The start time.</value>
        </member>
        <member name="M:demoWebApi.Models.IHealthCheckStatus.IncrementRequestsProcessed">
            <summary>
                Increments the requests processed.
            </summary>
        </member>
        <member name="M:demoWebApi.Models.IHealthCheckStatus.UpdateAliveSeconds">
            <summary>
                Updates the alive seconds.
            </summary>
        </member>
        <member name="T:demoWebApi.Program">
            <summary>
                This is the starting class for the WebApi demo.
            </summary>
        </member>
        <member name="M:demoWebApi.Program.CreateWebHostBuilder(System.String[])">
            <summary>
                Creates the web host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:demoWebApi.Program.CreateWebHostBuilder(System.String[],Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
                Creates the web host builder.
            </summary>
            <param name="args">These are the command line arguments.</param>
            <param name="hostingConfig">This is the hosting configuration.</param>
            <returns></returns>
        </member>
        <member name="M:demoWebApi.Program.Main(System.String[])">
            <summary>
                This is the entry point for the application.
            </summary>
            <param name="args">This is the command line arguments.</param>
        </member>
        <member name="M:demoWebApi.Program.GetHostingConfiguration(System.String[])">
            <summary>
                Gets the hosting configuration.
            </summary>
            <returns>This is the hosting configuration information.</returns>
        </member>
        <member name="T:demoWebApi.Services.ApiContext">
            <summary>
                This class implements a service to manage the database for the API.
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:demoWebApi.Services.ApiContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{demoWebApi.Services.ApiContext})">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Services.ApiContext" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="P:demoWebApi.Services.ApiContext.Definitions">
            <summary>
                Gets or sets the definitions.
            </summary>
            <value>This is the collection of definitions.</value>
        </member>
        <member name="M:demoWebApi.Services.ApiContext.DoesDefinitionExist(System.Int32)">
            <summary>
                Does the definition exist.
            </summary>
            <param name="id">The identifier.</param>
            <returns><c>true</c> if there is a <see cref="T:demoWebApi.Models.Definition" /> with the matching <paramref name="id" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:demoWebApi.Services.ApiContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Override this method to further configure the model that was discovered by convention from the entity types exposed in <see
                cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached and re-used for
                subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">
                The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on
                this object that allow you to configure aspects of the model that are specific to a given database.
            </param>
            <remarks>
                If a model is explicitly set on the options for this context (via <see
                cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />) then this method will not be run.
            </remarks>
        </member>
        <member name="T:demoWebApi.Startup">
            <summary>
                This is the ASP.NET Core <see cref="T:Microsoft.AspNetCore.Hosting.IStartup" /> implementation for this application.
            </summary>
        </member>
        <member name="M:demoWebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
                Initializes a new instance of the <see cref="T:demoWebApi.Startup" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="env">This is the environment.</param>
        </member>
        <member name="P:demoWebApi.Startup.Configuration">
            <summary>
                This is the configuration for the application.
            </summary>
        </member>
        <member name="M:demoWebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
                This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The environment.</param>
        </member>
        <member name="M:demoWebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The existing collection of services.</param>
        </member>
        <member name="M:demoWebApi.Startup.ConfigureMetrics(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This method configures the metric middleware and its supporting services.
            </summary>
            <param name="services">This is the existing collection of services.</param>
        </member>
        <member name="M:demoWebApi.Startup.CreateHealthCheckStatusSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Creates the health check status singleton.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:demoWebApi.Startup.GetXmlCommentsPath">
            <summary>
                This method gets the absolute pathname to the XML comments.
            </summary>
            <returns>This is the XMl comment pathname.</returns>
        </member>
    </members>
</doc>
