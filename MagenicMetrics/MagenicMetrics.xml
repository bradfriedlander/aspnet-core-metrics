<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MagenicMetrics</name>
    </assembly>
    <members>
        <member name="P:MagenicMetrics.IMetric.Application">
            <summary>
                Gets or sets the name of current application.
            </summary>
            <value>This is the name of the application.</value>
        </member>
        <member name="P:MagenicMetrics.IMetric.ServerName">
            <summary>
                Gets or sets the name of the server instance that responded to a request.
            </summary>
            <value>The name of the server instance.</value>
        </member>
        <member name="T:MagenicMetrics.IMetricService">
            <summary>
                This service provides the persistence for <see cref="T:MagenicMetrics.IMetric" /> objects.
            </summary>
            <remarks>
                <para>
                    The application that uses this is responsible for providing the database that will serve as the persistence store and a table that
                    contains columns for all of the properties defined in <see cref="T:MagenicMetrics.IMetric" />.
                </para>
            </remarks>
        </member>
        <member name="M:MagenicMetrics.IMetricService.AddAndSave(MagenicMetrics.IMetric)">
            <summary>
                This method adds an instance of <paramref name="metric" /> to the persistence store and commits the addition.
            </summary>
            <param name="metric">The metric to be added to the persistence store.</param>
            <returns>This is the number of entries written to the persistent store.</returns>
        </member>
        <member name="M:MagenicMetrics.IMetricService.GetLatest(System.Int32,System.Int32,System.String)">
            <summary>
                This method gets the most recent <see cref="T:MagenicMetrics.IMetric" /> records based on the provided filters.
            </summary>
            <param name="pageSize">This is the maximum number of records to retrieve for a given page.</param>
            <param name="pageNumber">This is the page number where <paramref name="pageSize" /> is the page size.</param>
            <param name="applicationFilter">This is the filter for the application name.</param>
            <returns>This is the matching collection of the records.</returns>
        </member>
        <member name="P:MagenicMetrics.Metric.Application">
            <summary>
                Gets or sets the name of current application.
            </summary>
            <value>This is the name of the application.</value>
        </member>
        <member name="P:MagenicMetrics.Metric.ServerName">
            <summary>
                Gets or sets the name of the server instance that responded to a request.
            </summary>
            <value>The name of the server instance.</value>
        </member>
        <member name="T:MagenicMetrics.MetricMiddleware">
            <summary>
                This class implements persisting DevOps metric information to a persistent store.
            </summary>
        </member>
        <member name="M:MagenicMetrics.MetricMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{MagenicMetrics.MetricMiddleware})">
            <summary>
                Initializes a new instance of the <see cref="T:MagenicMetrics.MetricMiddleware" /> class.
            </summary>
            <param name="next">The next link in the middleware pipeline.</param>
            <param name="logger">This is the logger.</param>
        </member>
        <member name="M:MagenicMetrics.MetricMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext,MagenicMetrics.IMetric,MagenicMetrics.IMetricService)">
            <summary>
                Invokes the specified HTTP context.
            </summary>
            <param name="context">This is the HTTP context for the request traversing the middleware pipeline.</param>
            <param name="metric">This is an instance of the metrics that are persisted.</param>
            <param name="metricService">
                This is the metric service. It is here (instead of being in the constructor) because middleware components can only have singleton
                injected objects. This service must be scoped.
            </param>
            <returns></returns>
        </member>
        <member name="M:MagenicMetrics.MetricMiddlewareExtensions.AddMetrics(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This methods adds all classes used by <see cref="T:MagenicMetrics.MetricMiddleware" /> to the service collection.
            </summary>
            <param name="services">This is the current services collection.</param>
            <returns>This is the updated services collection.</returns>
        </member>
        <member name="M:MagenicMetrics.MetricMiddlewareExtensions.UseMetrics(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
                This method performs all of the actions needed to add <see cref="T:MagenicMetrics.MetricMiddleware" /> to the HTTP request processing pipeline.
            </summary>
            <param name="app">This is the current application pipeline.</param>
            <returns>This is the updated HTTP request processing pipeline.</returns>
        </member>
        <member name="T:MagenicMetrics.MetricService">
            <summary>
                This service provides the persistence for <see cref="T:MagenicMetrics.IMetric" /> objects.
            </summary>
            <remarks>
                <para>
                    The application that uses this is responsible for providing the database that will serve as the persistence store and a table that
                    contains columns for all of the properties defined in <see cref="T:MagenicMetrics.IMetric" />.
                </para>
            </remarks>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
            <seealso cref="T:MagenicMetrics.IMetricService" />
        </member>
        <member name="M:MagenicMetrics.MetricService.#ctor(Microsoft.Extensions.Options.IOptions{MagenicMetrics.MetricServiceOptions},Microsoft.Extensions.Logging.ILogger{MagenicMetrics.MetricService},Microsoft.EntityFrameworkCore.DbContextOptions{MagenicMetrics.MetricService})">
            <summary>
                Initializes a new instance of the <see cref="T:MagenicMetrics.MetricService" /> class.
            </summary>
            <param name="options">These are the service configuration options.</param>
            <param name="logger">This is the logger.</param>
            <param name="contextOptions">This is the options for <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.</param>
        </member>
        <member name="P:MagenicMetrics.MetricService.Metrics">
            <summary>
                Gets or sets the metrics.
            </summary>
            <value>The metrics.</value>
        </member>
        <member name="M:MagenicMetrics.MetricService.AddAndSave(MagenicMetrics.IMetric)">
            <summary>
                This method adds an instance of <paramref name="metric" /> to the persistence store and commits the addition.
            </summary>
            <param name="metric">The metric to be added to the persistence store.</param>
            <returns>This is the number of entries written to the persistent store.</returns>
        </member>
        <member name="M:MagenicMetrics.MetricService.GetLatest(System.Int32,System.Int32,System.String)">
            <summary>
                This method gets the most recent <see cref="T:MagenicMetrics.IMetric" /> records based on the provided filters.
            </summary>
            <param name="pageSize">This is the maximum number of records to retrieve for a given page.</param>
            <param name="pageNumber">This is the page number where <paramref name="pageSize" /> is the page size.</param>
            <param name="applicationFilter">This is the filter for the application name.</param>
            <returns>This is the matching collection of the records.</returns>
        </member>
        <member name="M:MagenicMetrics.MetricService.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Override this method to further configure the model that was discovered by convention from the entity types exposed in <see
                cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached and re-used for
                subsequent instances of your derived context.
            </summary>
            <param name="modelBuilder">
                The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on
                this object that allow you to configure aspects of the model that are specific to a given database.
            </param>
            <remarks>
                If a model is explicitly set on the options for this context (via <see
                cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />) then this method will not be run.
            </remarks>
        </member>
        <member name="P:MagenicMetrics.MetricServiceOptions.MetricServiceConnection">
            <summary>
                Gets or sets the connection string for the database containing the <see cref="P:MagenicMetrics.MetricServiceOptions.TableName" /> table.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:MagenicMetrics.MetricServiceOptions.TableName">
            <summary>
                Gets or sets the name of the table that contains the properties for <see cref="T:MagenicMetrics.IMetric" />.
            </summary>
            <value>This is the name of the table.</value>
        </member>
    </members>
</doc>
